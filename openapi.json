{
  "openapi": "3.0.1",
  "info": {
    "title": "Animal House",
    "description": "A single API for the whole Animal House ecosystem",
    "version": "0.0.0"
  },
  "externalDocs": {
    "description": "Find out more about our API",
    "url": "http://luca.tagliavini5.tw.cs.unibo.it/api/hello"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Endpoints for authentication across all sites"
    },
    {
      "name": "game",
      "description": "APIs for the game frontend"
    },
    {
      "name": "community",
      "description": "Interact with the community through a forum"
    },
    {
      "name": "store",
      "description": "Manage orders and products"
    }
  ],
  "paths": {
    "/auth/id": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Returns a new UUID for a device",
        "description": "Returns an UUID for the current unauthorized session",
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register a new account with username and password and firstName",
        "description": "Lets a user register a new account with the minimum data required, but allows to provide extra fields such as lastName and city. Returns a bearer JWT token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User"
                  },
                  {
                    "required": [
                      "username",
                      "password",
                      "firstName"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "format": "jwt"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication is not required, an already logged in user cannot register a new account"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login with username and password",
        "description": "Lets a user login with its credentials and returns a JWT bearer token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "format": "jwt"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication is not required, an already logged in user cannon re-login"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Returns the currently logged in user",
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/game/score/{game}": {
      "patch": {
        "tags": [
          "game"
        ],
        "summary": "Update your score for a given game",
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GameType"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Value increment",
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameScore"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "tags": [
          "game"
        ],
        "summary": "Get your score for a given game",
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GameType"
            }
          },
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GameScore"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/game/leaderboard/{game}": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "Get the leaderboard of all players for a given game with pagination",
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GameType"
            }
          },
          {
            "name": "paginationQuery",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaginationQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "docs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GameScore"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/community/boards/": {
      "get": {
        "tags": [
          "community"
        ],
        "summary": "Get the forum structure, i.e. a listing of boards (subforums)",
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Board"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "community"
        ],
        "summary": "Create a new board for the community to post in",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/community/boards/{board}/": {
      "get": {
        "tags": [
          "community"
        ],
        "summary": "Gets a specific board, including a paging of its posts",
        "parameters": [
          {
            "name": "board",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "paginationQuery",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaginationQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "$ref": "#/components/schemas/Board"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "docs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Post"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "community"
        ],
        "summary": "Posts a new message in the specified board",
        "parameters": [
          {
            "name": "board",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "url"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "community"
        ],
        "summary": "Deletes a whole community board, including all of its posts",
        "parameters": [
          {
            "name": "board",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "community"
        ],
        "summary": "Update an existing board name and description",
        "parameters": [
          {
            "name": "board",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Board not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/posts/{post}": {
      "delete": {
        "tags": [
          "community"
        ],
        "summary": "Deletes a single post",
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "community"
        ],
        "summary": "Edits a previously published post",
        "parameters": [
          {
            "name": "post",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "message",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "photos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "url"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Post not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/products/": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get the products catalogue, i.e. a listing of every product",
        "parameters": [
          {
            "name": "paginationQuery",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PaginationQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "docs": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Product"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "store"
        ],
        "summary": "Insert a new product into the store",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "photos": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/products/{product}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get a single product",
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Deletes a product from the store",
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "store"
        ],
        "summary": "Update an existing product in the store",
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "photos": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/services/": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get the services catalogue, i.e. a listing of every service",
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Pagination"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "docs": {
                          "type": "array",
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/OfflineService"
                              },
                              {
                                "$ref": "#/components/schemas/OnlineService"
                              }
                            ],
                            "discriminator": {
                              "propertyName": "type",
                              "mapping": {
                                "offline": "#/components/schemas/OfflineService",
                                "online": "#/components/schemas/OfflineService"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "store"
        ],
        "summary": "Insert a new service into the store",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "photos": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "openingHours": {
                    "$ref": "#/components/schemas/Timetable"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OfflineService"
                    },
                    {
                      "$ref": "#/components/schemas/OnlineService"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/services/{service}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get a single service.",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OfflineService"
                    },
                    {
                      "$ref": "#/components/schemas/OnlineService"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Service not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Deletes a service from the store",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "store"
        ],
        "summary": "Update an existing service in the store",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "photos": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "openingHours": {
                    "$ref": "#/components/schemas/Timetable"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/categories/": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get the categories catalogue, i.e. a listing of every category",
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "store"
        ],
        "summary": "Add a category to the catalogue.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/categories/{category}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get the specified category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "uint64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Deletes a category from the store",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "store"
        ],
        "summary": "Edit a category in the catalogue",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "uint64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/categories/{category}/subcategories/": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get a listing of the subcategories associated to a certain category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "uint64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subcategory"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Parent category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "store"
        ],
        "summary": "Add a subcategory to a category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "uint64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Parent category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/store/subcategories/{subcategory}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Get the specified subcategory",
        "parameters": [
          {
            "name": "subcategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "uint64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Subcategory not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Deletes a subcategory from the store",
        "parameters": [
          {
            "name": "subcategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request fulfilled"
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "store"
        ],
        "summary": "Edit a subcategory in the catalogue",
        "parameters": [
          {
            "name": "subcategory",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number",
              "format": "uint64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request fulfilled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subcategory"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Subcategory not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Board": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "number",
            "format": "uint64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GameScore": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "type": "string",
            "format": "uuid"
          },
          "game": {
            "$ref": "#/components/schemas/GameType"
          },
          "score": {
            "type": "number"
          }
        }
      },
      "GameType": {
        "type": "string",
        "enum": [
          "quiz"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "online": {
            "type": "boolean"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "OfflineService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Service"
          },
          {
            "$ref": "#/components/schemas/Location"
          }
        ]
      },
      "OnlineService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Service"
          },
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "minimum": 0
          },
          "limit": {
            "type": "number",
            "minimum": 1
          },
          "page": {
            "type": "number",
            "minimum": 1
          },
          "pages": {
            "type": "number",
            "minimum": 1
          }
        }
      },
      "PaginationQuery": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 60,
            "default": 20
          },
          "page": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "sort": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/SortOrder"
          }
        }
      },
      "Pet": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "subcategory": {
            "$ref": "#/components/schemas/Subcategory"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "author": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "disponibility": {
            "type": "number",
            "format": "uint64"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "url"
            }
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "subcategory": {
            "$ref": "#/components/schemas/Subcategory"
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "subcategory": {
            "$ref": "#/components/schemas/Subcategory"
          },
          "openingHours": {
            "$ref": "#/components/schemas/Timetable"
          }
        }
      },
      "SortOrder": {
        "type": "number",
        "enum": [
          -1,
          1
        ]
      },
      "Subcategory": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "number",
            "format": "uint64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Timetable": {
        "type": "object",
        "properties": {
          "intervals": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "dateTime"
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "description": "User subscription or role",
            "enum": [
              0,
              1,
              2
            ]
          }
        }
      }
    }
  }
}